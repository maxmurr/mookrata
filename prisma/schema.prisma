generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

enum OrderStatus {
  pending
  processing
  completed
  cancelled
}

model User {
  id        Int         @id @default(autoincrement()) @map("user_id")
  name      String      @unique @db.VarChar(32)
  password  String      @db.VarChar(64)
  createdAt DateTime    @default(now()) @map("created_at") @db.DateTime(6)
  Table     Table[]
  Category  Category[]
  Product   Product[]
  Promotion Promotion[]

  @@map("users")
}

model Table {
  id        Int      @id @default(autoincrement()) @map("table_id")
  name      String   @unique @db.VarChar(32)
  qrCode    String?  @map("qr_code") @db.VarChar(64)
  userId    Int?     @map("user_id")
  user      User?    @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now()) @map("created_at") @db.DateTime(6)
  orders    Order[]

  @@index([userId])
  @@map("tables")
}

model Order {
  id        Int         @id @default(autoincrement()) @map("order_id")
  status    OrderStatus @default(pending)
  tableId   Int         @map("table_id")
  table     Table       @relation(fields: [tableId], references: [id])
  createdAt DateTime    @default(now()) @map("created_at") @db.DateTime(6)
  products  Product[]

  @@index([tableId])
  @@map("orders")
}

model Category {
  id        Int       @id @default(autoincrement()) @map("category_id")
  name      String    @unique @db.VarChar(32)
  image     String?   @db.VarChar(64)
  userId    Int       @map("user_id")
  user      User      @relation(fields: [userId], references: [id])
  createdAt DateTime  @default(now()) @map("created_at") @db.DateTime(6)
  products  Product[]

  @@index([userId])
  @@map("categories")
}

model Product {
  id          Int         @id @default(autoincrement()) @map("product_id")
  name        String      @unique @db.VarChar(32)
  description String?     @db.VarChar(255)
  image       String?     @db.VarChar(64)
  price       Float       @default(0) @db.Float
  quantity    Int         @default(0) @db.Int
  categoryId  Int         @map("category_id")
  category    Category    @relation(fields: [categoryId], references: [id])
  userId      Int         @map("user_id")
  user        User        @relation(fields: [userId], references: [id])
  createdAt   DateTime    @default(now()) @map("created_at") @db.DateTime(6)
  promotions  Promotion[]
  orders      Order[]

  @@index([categoryId])
  @@index([userId])
  @@map("products")
}

model Promotion {
  id          Int       @id @default(autoincrement()) @map("promotion_id")
  name        String    @unique @db.VarChar(32)
  price       Float     @default(0) @db.Float
  description String?   @db.VarChar(255)
  image       String?   @db.VarChar(64)
  userId      Int       @map("user_id")
  user        User      @relation(fields: [userId], references: [id])
  createdAt   DateTime  @default(now()) @map("created_at") @db.DateTime(6)
  products    Product[]

  @@index([userId])
  @@map("promotions")
}
