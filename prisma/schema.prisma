generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

enum OrderStatus {
  pending
  processing
  completed
}

model User {
  id         Int         @id @default(autoincrement()) @map("user_id")
  name       String      @unique @db.VarChar(32)
  password   String      @db.VarChar(64)
  createdAt  DateTime    @default(now()) @map("created_at") @db.DateTime(6)
  tables     Table[]
  categorys  Category[]
  products   Product[]
  promotions Promotion[]

  @@map("users")
}

model Table {
  id        Int      @id @default(autoincrement()) @map("table_id")
  name      String   @unique @db.VarChar(32)
  qrCode    String?  @map("qr_code") @db.VarChar(64)
  userId    Int?     @map("user_id")
  user      User?    @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now()) @map("created_at") @db.DateTime(6)
  orders    Order[]

  @@index([userId])
  @@map("tables")
}

model Order {
  id            Int            @id @default(autoincrement()) @map("order_id")
  status        OrderStatus    @default(pending)
  tableId       Int            @map("table_id")
  table         Table          @relation(fields: [tableId], references: [id])
  createdAt     DateTime       @default(now()) @map("created_at") @db.DateTime(6)
  promotionCart PromotionCart?
  productCart   ProductCart?

  @@index([tableId])
  @@map("orders")
}

model Category {
  id        Int       @id @default(autoincrement()) @map("category_id")
  name      String    @unique @db.VarChar(32)
  image     String?   @db.VarChar(64)
  userId    Int       @map("user_id")
  user      User      @relation(fields: [userId], references: [id])
  createdAt DateTime  @default(now()) @map("created_at") @db.DateTime(6)
  products  Product[]

  @@index([userId])
  @@map("categories")
}

model Product {
  id               Int               @id @default(autoincrement()) @map("product_id")
  name             String            @unique @db.VarChar(32)
  description      String?           @db.VarChar(255)
  image            String?           @db.VarChar(64)
  price            Float             @default(0) @db.Float
  categoryId       Int               @map("category_id")
  category         Category          @relation(fields: [categoryId], references: [id])
  userId           Int               @map("user_id")
  user             User              @relation(fields: [userId], references: [id])
  createdAt        DateTime          @default(now()) @map("created_at") @db.DateTime(6)
  productCartItems ProductCartItem[]

  @@index([categoryId])
  @@index([userId])
  @@map("products")
}

model ProductCart {
  id               Int               @id @default(autoincrement()) @map("product_cart_id")
  orderId          Int?              @unique @map("order_id")
  order            Order?            @relation(fields: [orderId], references: [id])
  promotionId      Int?              @unique @map("promotion_id")
  promotion        Promotion?        @relation(fields: [promotionId], references: [id])
  createdAt        DateTime          @default(now()) @map("created_at") @db.DateTime(6)
  productCartItems ProductCartItem[]

  @@index([orderId])
  @@index([promotionId])
  @@map("product_carts")
}

model ProductCartItem {
  id            Int         @id @default(autoincrement()) @map("product_cart_item_id")
  productCartId Int         @map("product_cart_id")
  productCart   ProductCart @relation(fields: [productCartId], references: [id])
  productId     Int         @map("product_id")
  product       Product     @relation(fields: [productId], references: [id])
  quantity      Int         @default(1) @db.Int
  createdAt     DateTime    @default(now()) @map("created_at") @db.DateTime(6)

  @@index([productCartId])
  @@index([productId])
  @@map("product_cart_items")
}

model Promotion {
  id                 Int                 @id @default(autoincrement()) @map("promotion_id")
  name               String              @unique @db.VarChar(32)
  price              Float               @default(0) @db.Float
  description        String?             @db.VarChar(255)
  image              String?             @db.VarChar(64)
  userId             Int                 @map("user_id")
  user               User                @relation(fields: [userId], references: [id])
  createdAt          DateTime            @default(now()) @map("created_at") @db.DateTime(6)
  productCart        ProductCart?
  promotionCartItems PromotionCartItem[]

  @@index([userId])
  @@map("promotions")
}

model PromotionCart {
  id                 Int                 @id @default(autoincrement()) @map("promotion_cart_id")
  orderId            Int                 @unique @map("order_id")
  order              Order               @relation(fields: [orderId], references: [id])
  createdAt          DateTime            @default(now()) @map("created_at") @db.DateTime(6)
  promotionCartItems PromotionCartItem[]

  @@index([orderId])
  @@map("promotion_carts")
}

model PromotionCartItem {
  id              Int           @id @default(autoincrement()) @map("promotion_cart_item_id")
  promotionCartId Int           @map("promotion_cart_id")
  promotionCart   PromotionCart @relation(fields: [promotionCartId], references: [id])
  promotionId     Int           @map("promotion_id")
  promotion       Promotion     @relation(fields: [promotionId], references: [id])
  quantity        Int           @default(1) @db.Int
  createdAt       DateTime      @default(now()) @map("created_at") @db.DateTime(6)

  @@index([promotionCartId])
  @@index([promotionId])
  @@map("promotion_cart_items")
}
